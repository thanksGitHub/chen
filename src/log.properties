#Level的五个等级SEVERE（最高值） 、WARNING 、INFO 、CONFIG 、FINE 、FINER 、FINEST（最低值）


#为 Handler 指定默认的级别（默认为 Level.INFO）。 

java.util.logging.ConsoleHandler.level=INFO

# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.SimpleFormatter）。 
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter


# 为 Handler 指定默认的级别（默认为 Level.ALL）

java.util.logging.FileHandler.level=INFO

# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.XMLFormatter）

java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

# 指定要写入到任意文件的近似最大量（以字节为单位），如果该数为0，则没有限制（默认为无限制）

java.util.logging.FileHandler.limit=20480

# 指定有多少输出文件参与循环（默认为 1）。
 
java.util.logging.FileHandler.count=10

# 为生成的输出文件名称指定一个模式。有关细节请参见以下内容（默认为 "%h/java%u.log"）

# "/" 本地路径名分隔符
# "%t" 系统临时目录 
# "%h" "user.home"系统属性的值 
# "%g" 区分循环日志的生成号 

# "%u" 解决冲突的惟一号码 

# "%%" 转换为单个百分数符号"%"

# 如果未指定 "%g"字段，并且文件计数大于 1，那么生成号将被添加到所生成文件名末尾的小数点后面 

java.util.logging.FileHandler.pattern=C:/testLogs/log%g.log

# 指定是否应该将 FileHandler 追加到任何现有文件上（默认为 false）

java.util.logging.FileHandler.append=true


# 指定handler

handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler